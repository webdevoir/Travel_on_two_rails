$(function(){

  var count = 0

  $("#add-waypoints").on("click", function(){
    count++
    if (count === 1) {
      $("#start-point").after(
        "<div class='field-title' id='way-point-" + count.toString() + "'>" +
          "<label for='waypoint-" + count.toString() + "'>Waypoint " + count.toString() + "</label>" +
          "<input class='form-control' type='text' name='waypoint-" + count.toString() + "' placeholder='Enter a location' autocomplete='off'>" +
        "</div>"
      )
    } else {
      $("#way-point-" + (count - 1).toString()).after(
        "<div class='field-title' id='way-point-" + count.toString() + "'>" +
          "<label for='waypoint-" + count.toString() + "'>Waypoint " + count.toString() + "</label>" +
          "<input class='form-control' type='text' name='waypoint-" + count.toString() + "' placeholder='Enter a location' autocomplete='off'>" +
        "</div>"
      )
    }
  })

  function initMap() {
    // setting as global scope which might be bad
    getLocation(function(pos) {
      var uluru = pos;
      map = new google.maps.Map(document.getElementById('new-post-map'), {
        zoom: 11,
        center: uluru
      });
      var input1 = document.getElementById('post_address1');
      var input2 = document.getElementById('post_address2');
      var autocomplete1 = new google.maps.places.Autocomplete(input1);
      var autocomplete2 = new google.maps.places.Autocomplete(input2);
      var geocoder= new google.maps.Geocoder();
      var directionsDisplay = new google.maps.DirectionsRenderer();
      directionsDisplay.setMap(map); // map should be already initialized.
      var directionsService = new google.maps.DirectionsService();

      google.maps.event.addListener(autocomplete2, 'place_changed', function() {
        geocoder.geocode({'address': $("#post_address1").val()}, function(results, status) {
          if (status === 'OK') {
            var lat_lng_1 = results[0].geometry.location
            $("#post_address1_lng").val(lat_lng_1.lng())
            $("#post_address1_lat").val(lat_lng_1.lat())
            geocoder.geocode({'address': $("#post_address2").val()}, function(results, status) {
              if (status === 'OK') {
                var lat_lng_2 = results[0].geometry.location
                $("#post_address2_lng").val(lat_lng_2.lng())
                $("#post_address2_lat").val(lat_lng_2.lat())
                calculateAndDisplayRoute(directionsService, directionsDisplay, $("#post_address1").val(), $("#post_address2").val());
                var distance = google.maps.geometry.spherical.interpolate(lat_lng_1, lat_lng_2, 0.5);
                $("#post_center_lng").val(distance.lng())
                $("#post_center_lat").val(distance.lat())
              } else {
                alert('Geocode was not successful for the following reason: ' + status);
              }
            });
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
      });
      $("#directions_type").on("change", function(){
        if ($("#post_address1").val() != "" && $("#post_address2").val() != "") {
          calculateAndDisplayRoute(directionsService, directionsDisplay, $("#post_address1").val(), $("#post_address2").val());
        }
      })
    })
  }

  function getLocation(callback) {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        callback(pos);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
  }

  function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {
    var selectedMode = document.getElementById('directions_type').value.toUpperCase();
    directionsService.route({
      origin: pointA,
      destination: pointB,
      travelMode: google.maps.TravelMode[selectedMode]
    }, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
  }

  function createMarker(map, latlng, label, html) {
    var contentString = '<b>'+label+'</b><br>'+html;
    var marker = new google.maps.Marker({
        position: latlng,
        map: map,
        title: label,
        zIndex: Math.round(latlng.lat*-100000)<<5
        });
        marker.myname = label;

    google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(contentString+"<br>"+marker.getPosition().toUrlValue(6));
        infowindow.open(map,marker);
        });
    return marker;
  }

  function setCenter(latlng) {
    map.setCenter({
      lat : latlng.lat,
      lng : latlng.lng
    });
  }

  function newLocation(newLat,newLng) {
  	map.setCenter({
  		lat : newLat,
  		lng : newLng
  	});
    map.setZoom(9)
  }

  initMap()
})
