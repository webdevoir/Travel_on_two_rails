$(function(){

  var count = 0

  $("#add-waypoints").on("click", function(){
    count++
    if (count === 1) {
      $("#start-point").after(
        "<div class='field-title' id='way-point-" + count.toString() + "'>" +
          "<label for='waypoint-" + count.toString() + "'>Waypoint " + count.toString() + "</label>" +
          "<input id='way-point-input-"+ count.toString() +"' class='form-control way-point' type='text' name='waypoint-" + count.toString() + "' placeholder='Enter a location' autocomplete='off'>" +
        "</div>"
      )
    } else {
      $("#way-point-" + (count - 1).toString()).after(
        "<div class='field-title' id='way-point-" + count.toString() + "'>" +
          "<label for='waypoint-" + count.toString() + "'>Waypoint " + count.toString() + "</label>" +
          "<input id='way-point-input-"+ count.toString() +"' class='form-control way-point' type='text' name='waypoint-" + count.toString() + "' placeholder='Enter a location' autocomplete='off'>" +
        "</div>"
      )
    }
    var timeout = null
    var input = document.getElementById("way-point-input-"+ count.toString())
    var autocomplete_input = new google.maps.places.Autocomplete(input);
    input.onkeyup = function(e) {
      clearTimeout(timeout)
      timeout = setTimeout(function(){
        calculateAndDisplayRoute(directionsService, directionsDisplay, $("#post_address1").val(), $("#post_address2").val());
      }, 2000)
    }
  })

  if (window.location.href.substr(window.location.href.length - 4) == "edit") {
    $("#post_distance").val($("#post_distance").val()*1000)
    $("#google-maps-directions").css("display", "none")
    $("#change_route").on("click", function(){
      if ($("#change_route").is(':checked')) {
        $("#google-maps-directions").css("display", "block")
      } else {
        $("#google-maps-directions").css("display", "none")
      }
    })
  }

  $("#new_post").submit(function(e){
    if ($("#post_poly_line").val() != "") {
      // $("#new_post").submit()
    } else {
      e.preventDefault()
      alert("Please chose a valid start and end location")
    }
  })

  function initMap() {
    // setting as global scope which might be bad
    getLocation(function(pos) {
      var uluru = pos;
      map = new google.maps.Map(document.getElementById('new-post-map'), {
        zoom: 9,
        center: uluru
      });
      var input1 = document.getElementById('post_address1');
      var input2 = document.getElementById('post_address2');
      var timeout = null
      var autocomplete1 = new google.maps.places.Autocomplete(input1);
      var autocomplete2 = new google.maps.places.Autocomplete(input2);
      geocoder = new google.maps.Geocoder();
      directionsDisplay = new google.maps.DirectionsRenderer();
      directionsDisplay.setMap(map); // map should be already initialized.
      directionsService = new google.maps.DirectionsService();

      if (window.location.href.substr(window.location.href.length - 4) === "edit") {
        var polyline = $("#post_poly_line").val()
        var lat_lng_path = google.maps.geometry.encoding.decodePath(polyline)
        var path = new google.maps.Polyline({
          path: lat_lng_path,
          geodesic: true,
          strokeColor: '#FF0000',
          strokeOpacity: 1.0,
          strokeWeight: 2
        });

        path.setMap(map)
        var center_lat_edit = $("#post_center_lat").val()
        var center_lng_edit = $("#post_center_lng").val()
        var lat_lng_hash = {lat: parseFloat(center_lat_edit), lng: parseFloat(center_lng_edit)}
        setCenter(lat_lng_hash)
      }

      // adding listner to autocompletes
      // google.maps.event.addListener(autocomplete2, 'place_changed', function() {
      //   setMidPoints()
      // });
      input2.onkeyup = function(e) {
        clearTimeout(timeout)
        timeout = setTimeout(function(){
          setMidPoints()
        }, 2000)
      }
      // google.maps.event.addListener(autocomplete1, 'place_changed', function() {
      //   if ($("#post_address2").val() != "") {
      //     setMidPoints()
      //   }
      // });
      input1.onkeyup = function(e) {
        clearTimeout(timeout)
        timeout = setTimeout(function(){
          if ($("#post_address2").val() != "") {
            setMidPoints()
          }
        }, 2000)
      }

      $("#directions_type").on("change", function(){
        if (window.location.href.substr(window.location.href.length - 4) != "edit" || $("#change_route").is(':checked')) {
          if ($("#post_address1").val() != "" && $("#post_address2").val() != "") {
            calculateAndDisplayRoute(directionsService, directionsDisplay, $("#post_address1").val(), $("#post_address2").val());
          }
        }
      })
    })
  }

  function setMidPoints() {
    if (window.location.href.substr(window.location.href.length - 4) != "edit" || $("#change_route").is(':checked')) {
      $("#loading-image").css("display", "block")
      geocoder.geocode({'address': $("#post_address1").val()}, function(results, status) {
        if (status === 'OK') {
          var lat_lng_1 = results[0].geometry.location
          $("#post_address1_lng").val(lat_lng_1.lng())
          $("#post_address1_lat").val(lat_lng_1.lat())
          geocoder.geocode({'address': $("#post_address2").val()}, function(results, status) {
            if (status === 'OK') {
              var lat_lng_2 = results[0].geometry.location
              $("#post_address2_lng").val(lat_lng_2.lng())
              $("#post_address2_lat").val(lat_lng_2.lat())
              calculateAndDisplayRoute(directionsService, directionsDisplay, $("#post_address1").val(), $("#post_address2").val());
              var distance = google.maps.geometry.spherical.interpolate(lat_lng_1, lat_lng_2, 0.5);
              $("#post_center_lng").val(distance.lng())
              $("#post_center_lat").val(distance.lat())
              $("#loading-image").css("display", "none")
            } else {
              $("#loading-image").css("display", "none")
              alert('Geocode was not successful for the following reason: ' + status);
            }
          });
        } else {
          $("#loading-image").css("display", "none")
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }
  }

  function getLocation(callback) {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        callback(pos);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
  }

  function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {
    var waypts = [];
    var wayPointsArray = $(".way-point");
    for (var i = 0; i < wayPointsArray.length; i++) {
      var input = $(wayPointsArray[i])
      if (input.val() != "") {
        waypts.push({
          location: input.val(),
          stopover: false
        });
      }
    }
    var selectedMode = document.getElementById('directions_type').value.toUpperCase();
    directionsService.route({
      origin: pointA,
      destination: pointB,
      waypoints: waypts,
      travelMode: google.maps.TravelMode[selectedMode]
    }, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        var distance = 0
        var detail_response = response.routes[0]
        for (var i = 0; i < detail_response.legs.length; i++) {
          distance += detail_response.legs[i].distance.value
        }
        savePolyLineString(response.routes[0].overview_polyline, distance)
        directionsDisplay.setDirections(response);
        $("#loading-image").css("display", "none")
      } else {
        window.alert('Directions request failed due to ' + status);
        $("#loading-image").css("display", "none")
      }
    });
  }

  function savePolyLineString(string, distance) {
    $("#post_poly_line").val(string)
    $("#post_distance").val(distance)
  }

  function createMarker(map, latlng, label, html) {
    var contentString = '<b>'+label+'</b><br>'+html;
    var marker = new google.maps.Marker({
        position: latlng,
        map: map,
        title: label,
        zIndex: Math.round(latlng.lat*-100000)<<5
        });
        marker.myname = label;

    google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(contentString+"<br>"+marker.getPosition().toUrlValue(6));
        infowindow.open(map,marker);
        });
    return marker;
  }

  function setCenter(latlng) {
    map.setCenter({
      lat : latlng.lat,
      lng : latlng.lng
    });
  }

  function newLocation(newLat,newLng) {
  	map.setCenter({
  		lat : newLat,
  		lng : newLng
  	});
    map.setZoom(9)
  }

  initMap()
})
