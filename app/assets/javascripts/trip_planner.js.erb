$(function(){

  $(".trip-planner-sidebar-item").on("click", function(){
    var lat = $(this).data("lat")
    var lng = $(this).data("lng")
    newLocation(lat, lng)
  })

  function initMap() {
    // var directionsService = new google.maps.DirectionsService;
    // var directionsDisplay = new google.maps.DirectionsRenderer;
    // setting as global scope which might be bad
    var uluru = {lat: -25.363, lng: 131.044};
    map = new google.maps.Map(document.getElementById('map-trip-planner'), {
      zoom: 7
    });
    // directionsDisplay.setMap(map);
    // directionsDisplay.setPanel(document.getElementById('right-panel'));

    calculateAndDisplayRoute(map);
  }

  function calculateAndDisplayRoute(map) {
    var id = $("#trip_id").val()
    $.ajax({
      url: "/trips/"+id+"/fetch_posts",
    }).done(function(result){
      var posts_unsorted = result.posts
      var trip = result.trip
      var routes = result.routes
      var posts = posts_unsorted
      createDirections(routes, map)
    })
  }

  function createDirections(routes, map) {
    var waypts = []
    var last_point = ""
    for (var i = 0; i < routes.length; i++) {
      var center_point = {lat: parseFloat(routes[i].center_lat), lng: parseFloat(routes[i].center_lng)}
      if (routes[i].poly_line != null) {
        var lat_lng_path = google.maps.geometry.encoding.decodePath(routes[i].poly_line)
        createPolyline(lat_lng_path)
        // createMarker(map, center_point, "label", "html")
      }
      if (parseInt(routes.length/2) === (i + 1) || routes.length === 1) {
        setCenter(center_point)
      }
      var address1_point = lat_lng_path[0]
      var address2_point = lat_lng_path[lat_lng_path.length -1]
      var last_point_boolean = last_point === routes[i].address1
      last_point = routes[i].address2
      if (i === 0 ) {
        createMarker(map, address1_point, "label", "html")
        createMarker(map, address2_point, "label", "html")
      } else if ( i === routes.length - 1 ) {
        createMarker(map, address2_point, "label", "html")
        if (!last_point_boolean) {
          createMarker(map, address1_point, "label", "html")
        }
      } else {
        if (last_point_boolean) {
          createMarker(map, address2_point, "label", "html")
        } else {
          createMarker(map, address1_point, "label", "html")
          createMarker(map, address2_point, "label", "html")
        }
      }
    }
  }

  function renderDirections(result, map) {
    var directionsRenderer = new google.maps.DirectionsRenderer();
    directionsRenderer.setMap(map);
    directionsRenderer.setDirections(result);
  }

  function createPolyline(lat_lng_path) {
    var path = new google.maps.Polyline({
      path: lat_lng_path,
      geodesic: true,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2
    });

    path.setMap(map)
  }

  function createMarker(map, latlng, label, html) {
    var contentString = '<b>'+label+'</b><br>'+html;
    var marker = new google.maps.Marker({
        position: latlng,
        map: map,
        title: label,
        zIndex: Math.round(latlng.lat*-100000)<<5
        });
        marker.myname = label;

    google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(contentString+"<br>"+marker.getPosition().toUrlValue(6));
        infowindow.open(map,marker);
        });
    return marker;
  }

  function setCenter(latlng) {
    map.setCenter({
      lat : latlng.lat,
      lng : latlng.lng
    });
  }

  function newLocation(newLat,newLng) {
  	map.setCenter({
  		lat : newLat,
  		lng : newLng
  	});
    map.setZoom(9)
  }

  initMap()
})
